{"version":3,"sources":["components/SearchBar.jsx","components/FilterMenu.jsx","components/SearchBarArea.jsx","components/InfoLine.jsx","components/InfoBlock.jsx","components/ResultsList.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","useState","value","setValue","useEffect","handleSearchBar","className","style","flex","onChange","event","target","FilterMenu","handleSelect","default","SearchBarArea","search","setSearch","filter","setFilter","onSubmit","preventDefault","searchTerm","handleSearch","class","id","InfoLine","name","InfoBlock","obj","console","log","item","Object","entries","map","key","ResultsList","newSearchProp","newSearch","setNewSearch","url","setUrl","filteredResults","setFilteredResults","getResults","axiosUrl","axios","get","then","res","data","next","fuse","Fuse","results","keys","shouldSort","threshold","prevState","concat","catch","error","i","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cedacc9c.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\n\nfunction SearchBar(props) {\n\n  const [value, setValue] = useState('');\n\n  const onChangeHandler = (event) => {\n  \tsetValue(event.target.value);\n  \tprops.handleSearchBar(value);\n  }\n\n  useEffect(() => {\n  \tprops.handleSearchBar(value);\n  }, [value, props]);\n\n  return (\n    <>\n      <input className=\"border p-2\" style={{ flex: '0 1 80%' }} onChange={onChangeHandler} value ={value} />\n    </>\n  );\n}\nexport default SearchBar;\n","import {useState, useEffect} from 'react';\n\nfunction FilterMenu(props) {\n\n  const [value, setValue] = useState('');\n\n  const onChangeHandler = (event) => {\n  \tsetValue(event.target.value);\n  }\n\n  useEffect(() => {\n  \tprops.handleSelect(value);\n  }, [value, props]);\n\n  return (\n      <select className=\"border\" style={{ flex: '0 1 10%' }} onChange={onChangeHandler}>\n        <option value=\"\" default>Choose</option>\n        <option value=\"films\">Films</option>\n        <option value=\"people\">People</option>\n        <option value=\"planets\">Planets</option>\n        <option value=\"species\">Species</option>\n        <option value=\"starships\">Starships</option>\n        <option value=\"vehicles\">Vehicles</option>\n      </select>\n  );\n}\nexport default FilterMenu;\n","import {useState} from 'react';\n\n\n\nimport SearchBar from './SearchBar';\nimport FilterMenu from './FilterMenu';\n\nfunction SearchBarArea(props) {\n\nconst [search, setSearch] = useState('');\nconst [filter, setFilter] = useState('');\n\n  const onSubmitHandler = (event) => {\n  \tevent.preventDefault();\n    if (search !== '' && filter !== ''){\n          const searchTerm = {\n      'search': search,\n      'filter': filter\n    };\n    props.handleSearch(searchTerm);\n  }\n  }\n\n  const handleSearchBar = (value) => {\n  \tsetSearch(value);\n  }\n\n  const handleSelect = (value) => {\n  \tsetFilter(value);\n  }\n\n  return (\n    <>\n      <form onSubmit={onSubmitHandler}>\n        <div  className=\"block sm:flex justify-between my-2\">\n        <SearchBar handleSearchBar={handleSearchBar} />\n        <FilterMenu handleSelect={handleSelect} />\n        </div>\n        <button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" id=\"submit\">Search</button>\n      </form>\n    </>\n  );\n}\nexport default SearchBarArea;\n","\n\nfunction InfoLine({name, value}) {\n  // const isApi = (value) =>{\n  // \tif(value.includes('https') || Array.isArray(value)){\n  // \t\treturn true;\n  // \t}\n  // \treturn false;\n  // }\n\n  return (\n    <>\n\t\t<div key={name}><strong>{name}:</strong> {value} </div>\n    </>\n  );\n}\nexport default InfoLine;\n\n\n\n","import InfoLine from './InfoLine';\n\n\nfunction InfoBlock({obj}) {\n  console.log(\"InfoBlock: \", obj.item);\n\n  return (\n    <>\n    <div className=\"border my-3 rounded-md\">\n          {\n          \tObject.entries(obj.item).map(([key,value]) => (\n          \t\t<div id={key}>\n          \t\t  <InfoLine name={key} value={value} />\n          \t\t</div>\n          \t))  \n          }   \n    </div>\n    </>\n  );\n}\nexport default InfoBlock;\n","import axios from 'axios'\nimport Fuse from 'fuse.js'\nimport {useState, useEffect} from 'react';\n\nimport InfoBlock from './InfoBlock';\n\n// TODO: Figure out how to properly reset the screen with new search\nfunction ResultsList({search, newSearchProp}) {\n  const [filter, setFilter] = useState(search);\n  const [newSearch, setNewSearch] = useState(newSearchProp);\n  const [url, setUrl] = useState('');\n  const [filteredResults, setFilteredResults] = useState([]);\n\n  useEffect(() =>{\n  \tsetFilter(search);\n  \tsetUrl(`https://swapi.dev/api/${search.filter}/`);\n  \tsetFilteredResults([]);\n  \tsetNewSearch(true);\n  }, [search]);\n\n  useEffect(() =>{\n  \tgetResults(url);\n  }, [url]);\n\n\n\n  const getResults = (axiosUrl) =>{\n  \tif(axiosUrl !==''){\n  \taxios.get(axiosUrl)\n      .then(res => {\n        \n\t    getResults(res.data.next);\n\t\tconst fuse = new Fuse(res.data.results, {\n\t\t\tkeys:[\n\t\t \t\"name\",\n\t\t \t\"title\"],\n\t\t \t shouldSort: true,\n\t\t \t threshold: .3\n\n\t\t});\n\t\tsetNewSearch(false);\n\t\tconst results = fuse.search(filter.search);\n\t\tif(results !== []){\n\t\tsetFilteredResults((prevState) => {\n\t    \tconst newState = prevState.concat(results);\n\t  \t\treturn newState;\n\t\t});\t\n\t\t}\n\n      })\n      .catch(error => console.error(`Error: ${error}`));\n      } \n  }\n// TODO: No Results Found Screen\n  return (\n    <>\n      {filteredResults !== [] && filteredResults.map((obj, i) =>(\n      \t\t<InfoBlock obj={obj}  />\n      \t))}\n      {newSearch === true && <p>Loading...</p>}\n    </>\n  );\n}\nexport default ResultsList;\n","import {useState} from 'react';\n\n\nimport SearchBarArea from './components/SearchBarArea';\nimport ResultsList from './components/ResultsList';\n\nfunction App() {\n  const [search, setSearch] = useState('');\n\n\n  const handleSearch = (value) => {\n    setSearch(value);\n  }\n\n  return (\n    <>\n      <div className=\"ui border max-w-3xl my-12 mx-auto p-3\">\n      <SearchBarArea handleSearch={handleSearch} />\n      {search === '' && <p>Enter a Search Term and Category</p>}\n      {search !== '' && <ResultsList search={search} newSearchProp={true} />}\n      \n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}